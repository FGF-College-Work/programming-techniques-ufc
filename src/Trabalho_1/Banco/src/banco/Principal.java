/*
 * Copyright 2017 Manoel Vilela <manoel_vilela@engineer.com>
 */
package banco;

import banco.contas.Conta;
import banco.contas.ContaEspecial;
import banco.contas.ContaPoupanca;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Esta é a classe controladora principal onde o JFrame (top-window-container)
 * compõe todos os outros componentes de UI via JPanel usando CardLayout.
 * @author Manoel Vilela
 */
public class Principal extends javax.swing.JFrame {
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    public void enviaContasParaCadastro(ArrayList<Conta> contas) {
        faseCadastro.setContas(contas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        faseCadastro = new banco.gui.FaseCadastro();
        faseOperacoes = new banco.gui.FaseOperacoes();
        saldos = new banco.gui.operacoes.Saldos();
        transferencia = new banco.gui.operacoes.Transferencia();
        saque = new banco.gui.operacoes.Saque();
        reajustar = new banco.gui.operacoes.Reajustar();
        deposito = new banco.gui.operacoes.Deposito();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        faseCadastro.setPreferredSize(new java.awt.Dimension(400, 300));
        getContentPane().add(faseCadastro, "cadastro");
        getContentPane().add(faseOperacoes, "operacoes");
        getContentPane().add(saldos, "saldos");
        getContentPane().add(transferencia, "transferencia");
        getContentPane().add(saque, "saque");
        getContentPane().add(reajustar, "reajustar");
        getContentPane().add(deposito, "deposito");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* cria instâncias de contas */
        ArrayList<Conta> contas = new ArrayList<>();
        contas.add(new Conta());
        contas.add(new ContaPoupanca());
        contas.add(new ContaEspecial());
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               Principal f = new Principal();
               f.setTitle("Banco Lambda");
               f.enviaContasParaCadastro(contas);
               f.setVisible(true);
               JOptionPane.showMessageDialog(f, "Bem-vindo ao Banco Lambda!", 
                                                "Banco Lambda",
                                                JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private banco.gui.operacoes.Deposito deposito;
    private banco.gui.FaseCadastro faseCadastro;
    private banco.gui.FaseOperacoes faseOperacoes;
    private banco.gui.operacoes.Reajustar reajustar;
    private banco.gui.operacoes.Saldos saldos;
    private banco.gui.operacoes.Saque saque;
    private banco.gui.operacoes.Transferencia transferencia;
    // End of variables declaration//GEN-END:variables
}
